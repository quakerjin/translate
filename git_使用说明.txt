git 使用方法:

1.注册账户以及创建仓库

要想使用github第一步当然是注册github账号了。之后就可以创建仓库了（免费用户只能建公共仓库），Create a New Repository，填好名称后Create，之后会出现一些仓库的配置信息，这也是一个git的简单教程。

2.安装客户端

http://code.google.com/p/git-osx-installer/downloads/list?can=3

3.配置Git

=== 首先在本地创建ssh key；====

$ ssh-keygen -t rsa -C "your_email@youremail.com"

后面的your_email@youremail.com改为你的邮箱，之后会要求确认路径和输入密码，我们这使用默认的一路回车就行。成功的话会在~/下生成.ssh文件夹，进去，打开id_rsa.pub，复制里面的key。

回到github，进入Account Settings，左边选择SSH Keys，Add SSH Key,title随便填，粘贴key。

为了验证是否成功，在git bash下输入：

$ ssh -T git@github.com

如果是第一次的会提示是否continue，输入yes就会看到：You’ve successfully authenticated, but GitHub does not provide shell access 。这就表示已成功连上github。

=== 设置username和email，因为github每次commit都会记录他们。===

$ git config --global user.name "your name"
$ git config --global user.email "your_email@youremail.com"

4.导入远程的库到本地

git clone git@github.com:quakerjin/translate

其中： quakerjin/translate  分别是github上的用户名和建立的库名

这个命令运行完毕后，会在当前文件夹下建立一个 translate 的文件夹，里面就是远程的文件内容。

5.添加新文件到本地仓库和远程仓库

文件添加流程：

git add 1.txt 
git add 2.txt 

这个命令是添加现有的文件到缓存区

git commit -m "提交说明" 

这个命令可以把缓存区的所有文件都提交到本地仓库

如果需要提交到远程的仓库，需要用如下方法添加：

git remote add 1.txt git@github.com:quakerjin/translate 

这条命令把文件提交到了远程的缓存区

然后运行下面的命令把文件提交到远程仓库：

git push 1.txt 

6.日常反复提交文件

修改现存文件后，需要先提交到缓存区：

git add 1.txt
git add 2.txt 

可以用 

git status 查看修改了哪些文件

然后提交到本地仓库

git commit -m "提交说明"

然后再提交到远程仓库

git push 1.txt









